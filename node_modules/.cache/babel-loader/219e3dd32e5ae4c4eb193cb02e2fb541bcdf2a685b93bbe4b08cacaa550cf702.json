{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\smart-goal-planner2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport GoalList from './components/GoalList';\nimport GoalForm from './components/GoalForm';\nimport Overview from './components/Overview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchGoals();\n  }, []);\n  const fetchGoals = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/goals');\n      const data = await response.json();\n      setGoals(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching goals:', error);\n    }\n  };\n  const addGoal = async newGoal => {\n    try {\n      const response = await fetch('http://localhost:3000/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...newGoal,\n          savedAmount: 0,\n          createdAt: new Date().toISOString().split('T')[0]\n        })\n      });\n      const data = await response.json();\n      setGoals([...goals, data]);\n    } catch (error) {\n      console.error('Error adding goal:', error);\n    }\n  };\n  const updateGoal = async updatedGoal => {\n    try {\n      await fetch(`http://localhost:3000/goals/${updatedGoal.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedGoal)\n      });\n      setGoals(goals.map(goal => goal.id === updatedGoal.id ? updatedGoal : goal));\n    } catch (error) {\n      console.error('Error updating goal:', error);\n    }\n  };\n  const deleteGoal = async id => {\n    try {\n      await fetch(`http://localhost:3000/goals/${id}`, {\n        method: 'DELETE'\n      });\n      setGoals(goals.filter(goal => goal.id !== id));\n    } catch (error) {\n      console.error('Error deleting goal:', error);\n    }\n  };\n  const makeDeposit = async (goalId, amount) => {\n    try {\n      const goal = goals.find(g => g.id === goalId);\n      const updatedGoal = {\n        ...goal,\n        savedAmount: goal.savedAmount + Number(amount)\n      };\n      await fetch(`http://localhost:3000/goals/${goalId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          savedAmount: updatedGoal.savedAmount\n        })\n      });\n      setGoals(goals.map(g => g.id === goalId ? updatedGoal : g));\n    } catch (error) {\n      console.error('Error making deposit:', error);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SMART Goal Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overview, {\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalForm, {\n      onAddGoal: addGoal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalList, {\n      goals: goals,\n      onUpdateGoal: updateGoal,\n      onDeleteGoal: deleteGoal,\n      onDeposit: makeDeposit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OSllIchwb3o34dDLE80zHTxZWDk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","GoalList","GoalForm","Overview","jsxDEV","_jsxDEV","App","_s","goals","setGoals","isLoading","setIsLoading","fetchGoals","response","fetch","data","json","error","console","addGoal","newGoal","method","headers","body","JSON","stringify","savedAmount","createdAt","Date","toISOString","split","updateGoal","updatedGoal","id","map","goal","deleteGoal","filter","makeDeposit","goalId","amount","find","g","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddGoal","onUpdateGoal","onDeleteGoal","onDeposit","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Documents/smart-goal-planner2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport GoalList from './components/GoalList';\r\nimport GoalForm from './components/GoalForm';\r\nimport Overview from './components/Overview';\r\n\r\nfunction App() {\r\n  const [goals, setGoals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchGoals();\r\n  }, []);\r\n\r\n  const fetchGoals = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/goals');\r\n      const data = await response.json();\r\n      setGoals(data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching goals:', error);\r\n    }\r\n  };\r\n\r\n  const addGoal = async (newGoal) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/goals', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...newGoal,\r\n          savedAmount: 0,\r\n          createdAt: new Date().toISOString().split('T')[0]\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      setGoals([...goals, data]);\r\n    } catch (error) {\r\n      console.error('Error adding goal:', error);\r\n    }\r\n  };\r\n\r\n  const updateGoal = async (updatedGoal) => {\r\n    try {\r\n      await fetch(`http://localhost:3000/goals/${updatedGoal.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedGoal),\r\n      });\r\n      setGoals(goals.map(goal => \r\n        goal.id === updatedGoal.id ? updatedGoal : goal\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error updating goal:', error);\r\n    }\r\n  };\r\n\r\n  const deleteGoal = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:3000/goals/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      setGoals(goals.filter(goal => goal.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting goal:', error);\r\n    }\r\n  };\r\n\r\n  const makeDeposit = async (goalId, amount) => {\r\n    try {\r\n      const goal = goals.find(g => g.id === goalId);\r\n      const updatedGoal = {\r\n        ...goal,\r\n        savedAmount: goal.savedAmount + Number(amount)\r\n      };\r\n      \r\n      await fetch(`http://localhost:3000/goals/${goalId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ savedAmount: updatedGoal.savedAmount }),\r\n      });\r\n      \r\n      setGoals(goals.map(g => \r\n        g.id === goalId ? updatedGoal : g\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error making deposit:', error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>SMART Goal Planner</h1>\r\n      <Overview goals={goals} />\r\n      <GoalForm onAddGoal={addGoal} />\r\n      <GoalList \r\n        goals={goals} \r\n        onUpdateGoal={updateGoal} \r\n        onDeleteGoal={deleteGoal}\r\n        onDeposit={makeDeposit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}